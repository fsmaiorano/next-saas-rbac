@apiUrl= http://localhost:3333
@authToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJlZTEzYzZkMS1jNTJmLTRhNWMtYmM5Zi00YzE0YTQyYzBlNTIiLCJlbWFpbCI6ImpvaG5kb2VAZW1haWwuY29tIiwibmFtZSI6IkpvaG4gRG9lIiwiYXZhdGFyVXJsIjpudWxsLCJpYXQiOjE3MTQzMDkyOTQsImV4cCI6MTcxNDM5NTY5NH0.gH636SJqueBPnR1JR6IqI9HfPiM3PszF2C_XLtF99es
@slug = developer-organization
@projectId = 489101e3-43ab-4d3f-8308-597fcb05fd31

#### User
###
### Create User
POST {{apiUrl}}/users
Accept: application/json
Content-Type: application/json

{
  "name": "John Doe",
  "email": "johndoe@email.com",
  "password": "123456"
}

#### Authentication
###
### Authenticate user with password
# @name Authentication
POST {{apiUrl}}/sessions/password
Accept: application/json
Content-Type: application/json

{
  "email": "johndoe@email.com",
  "password": "123456"
}

###
### Authenticate with github
# @name AuthenticationGithub
# @description Authenticate user with github
# https://github.com/login/oauth/authorize?client_id={{github_client_id}}&redirect_uri=http://localhost:3000/api/auth/callback&scope=user:email
POST {{apiUrl}}/sessions/github
Accept: application/json
Content-Type: application/json

{
  "code": "5876db580b98d22f470b"
}

###
### Authenticate user with token and get profile
GET {{apiUrl}}/profile
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{authToken}}

#### Organization
###
### Create Organization
POST {{apiUrl}}/organization
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Developer Organization",
  "domain": "developer-organization.com",
  "shouldAttachUsersByDomain": true
}

### Get membership by organization

GET {{apiUrl}}/organization/{{slug}}/membership
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{authToken}}

### Get organization by slug
GET {{apiUrl}}/organization/{{slug}}
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{authToken}}

### Get organization 
GET {{apiUrl}}/organization
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{authToken}}

### Update organization
PUT {{apiUrl}}/organization/{{slug}}
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Developer Organization Updated",
  "domain": "developer-organization.com",
  "shouldAttachUsersByDomain": true
}

### Delete organization
DELETE {{apiUrl}}/organization/{{slug}}
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{authToken}}

### Transfer organization
POST {{apiUrl}}/organization/{{slug}}/transfer
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}

{
  "transferToUserId": "e13c6d1-c52f-4a5c-bc9f-4c14a42c0e52"
}

#### Project
###
### Create Project
POST {{apiUrl}}/organization/{{slug}}/project
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}

{
  "name": "Project 1",
  "description": "Project 1 description",
  "organizationSlug": "developer-organization"
}

### Delete Project
DELETE {{apiUrl}}/organization/{{slug}}/project/{{projectId}}
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}
