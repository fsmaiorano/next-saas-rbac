@apiUrl= http://localhost:3333
@authToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkNzQ4YWQ2Yy1iNjMzLTRhOWQtYTU3MS1kY2M2NTVkMzk3ZGIiLCJlbWFpbCI6ImpvaG5AYWNtZS5jb20iLCJuYW1lIjoiSm9obiBEb2UiLCJhdmF0YXJVcmwiOiJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvNjUyNzY1NDMiLCJpYXQiOjE3MTgwMTc1NjEsImV4cCI6MTcxODEwMzk2MX0.fGJpv0J3f4AEi-jXuW3f_gY-hAqfU1-3gKfd1b6Bpok
@orgSlug = developer-organization
@projectId = 489101e3-43ab-4d3f-8308-597fcb05fd31
@projectSlug = project-1
@memberId = 4a4d158b-b841-4971-a821-1b607a66062d
@inviteId = 4a4d158b-b841-4971-a821-1b607a66062d

#### User
###
### Create User
POST {{apiUrl}}/users
Accept: application/json
Content-Type: application/json

{
  "name": "John Doe",
  "email": "johndoe@email.com",
  "password": "123456"
}

#### Authentication
###
### Authenticate user with password
# @name Authentication
POST {{apiUrl}}/sessions/password
Accept: application/json
Content-Type: application/json

{
  "email": "john@acme.com",
  "password": "123456"
}

###
### Authenticate with github
# @name AuthenticationGithub
# @description Authenticate user with github
# https://github.com/login/oauth/authorize?client_id={{github_client_id}}&redirect_uri=http://localhost:3000/api/auth/callback&scope=user:email
POST {{apiUrl}}/sessions/github
Accept: application/json
Content-Type: application/json

{
  "code": "5876db580b98d22f470b"
}

###
### Authenticate user with token and get profile
GET {{apiUrl}}/profile
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{authToken}}

#### Organization
###
### Create Organization
POST {{apiUrl}}/organization
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Developer Organization",
  "domain": "developer-organization.com",
  "shouldAttachUsersByDomain": true
}

### Get membership by organization

GET {{apiUrl}}/organization/{{orgSlug}}/membership
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{authToken}}

### Get organization by slug
GET {{apiUrl}}/organization/{{orgSlug}}
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{authToken}}

### Get organization 
GET {{apiUrl}}/organization
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{authToken}}

### Update organization
PUT {{apiUrl}}/organization/{{orgSlug}}
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "name": "Developer Organization Updated",
  "domain": "developer-organization.com",
  "shouldAttachUsersByDomain": true
}

### Delete organization
DELETE {{apiUrl}}/organization/{{orgSlug}}
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{authToken}}

### Transfer organization
POST {{apiUrl}}/organization/{{orgSlug}}/transfer
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}

{
  "transferToUserId": "e13c6d1-c52f-4a5c-bc9f-4c14a42c0e52"
}

#### Project
###
### Create Project
POST {{apiUrl}}/organization/{{orgSlug}}/project
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}

{
  "name": "Project 1",
  "description": "Project 1 description",
  "organizationSlug": "developer-organization"
}

### Delete Project
DELETE {{apiUrl}}/organization/{{orgSlug}}/project/{{projectId}}
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}

### Get Project
GET {{apiUrl}}/organization/{{orgSlug}}/project/{{projectSlug}}
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}

### Get Projects
GET {{apiUrl}}/organization/{{orgSlug}}/project
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}

### Update Project
PUT {{apiUrl}}/organization/{{orgSlug}}/project/{{projectId}}
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}

#### Member
###
### Get members by organization
GET {{apiUrl}}/organization/{{orgSlug}}/member
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}

### Update member 
PUT {{apiUrl}}/organization/{{orgSlug}}/member/{{memberId}}
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}

{
  "role": "ADMIN"
}

### Delete member
DELETE {{apiUrl}}/organization/{{orgSlug}}/member/{{memberId}}
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}

#### Invite
###
### Create invite
POST {{apiUrl}}/organization/{{orgSlug}}/invite
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}

{
  "email": "test@email.com",
  "role": "ADMIN"
}

### Get invite by id
GET {{apiUrl}}/invite/{{inviteId}}
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}

### Get invite by slug
GET {{apiUrl}}/organization/{{orgSlug}}/invite
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}

### Accept invite
POST {{apiUrl}}/invite/{{inviteId}}
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}

{
  "inviteId": "4a4d158b-b841-4971-a821-1b607a66062d"
}

### Reject invite
DELETE {{apiUrl}}/invite/{{inviteId}}/reject
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}

### Revoke invite
POST {{apiUrl}}/invite/{{inviteId}}
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}

{
  "slug" : "developer-organization",
  "inviteId": "4a4d158b-b841-4971-a821-1b607a66062d"
}

### Get pending invites
GET {{apiUrl}}/pending-invites
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}

### Billing
##
### Get organization billing
GET {{apiUrl}}/organization/{{orgSlug}}/billing
Accept: application/json
Content-Type: application/json
Authorization : Bearer {{authToken}}